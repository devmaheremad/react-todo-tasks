{"version":3,"sources":["Components/ToDoListTasks/ToDoListTasksStyled.js","Components/ToDoListTasks/ToDoListTasks.js","Components/ToDoListAdd/ToDoListAddStyled.js","Components/ToDoListAdd/ToDoListAdd.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoTask","Styled","div","ToDoNoTask","ToDoTaskTHeader","Task","span","Priority","Times","ForFlex","TaskTitle","TaskPriority","TaskTimes","ToDoListTasks","props","tasks","showTasks","length","map","task","index","priority","onClick","handelDelete","ToDoAddForm","form","ToDoAddFormInput","input","ToDoAddFormNameLabel","label","ToDoAddFormNameInput","ToDoAddFormPriorityLabel","ToDoAddFormPriorityInput","ToDoAddFormSubmit","ToDoListAdd","state","handelChange","e","setState","target","id","value","handelSubmit","preventDefault","addItem","onChange","this","onSubmit","htmlFor","type","placeholder","required","Component","App","indexSelected","allTasksWithoutDeleted","filter","item","push","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c48cdfeb.chunk.js","sourcesContent":["import Styled from 'styled-components'\r\n\r\nexport const ToDoTask = Styled.div `\r\n    background-color: #fff;\r\n`\r\n\r\nexport const ToDoNoTask = Styled.div `\r\n    background-color: #fff;\r\n    color: #46529d;\r\n    padding: 1rem 0.4rem;\r\n`\r\n\r\nexport const ToDoTaskTHeader = Styled.div `\r\n    display: flex;\r\n    background-color: #30B9F0;\r\n`\r\n\r\nexport const Task = Styled.span `\r\n    flex-basis: 60%;\r\n    padding: 1rem 0.4rem;\r\n    color: #264653;\r\n`\r\n\r\nexport const Priority = Styled.span `\r\n    flex-basis: 30%;\r\n    padding: 1rem 0.4rem;\r\n    color: #264653;\r\n`\r\n\r\nexport const Times = Styled.span `\r\n    flex-basis: 10%;\r\n    padding: 1rem 0.4rem;\r\n    color: #30B9F0;\r\n    cursor: pointer;\r\n    color: #264653;\r\n`\r\n\r\nexport const ForFlex = Styled.div `\r\n    display: flex;\r\n`\r\n\r\nexport const TaskTitle = Styled(Task) `\r\n    color: #fff;\r\n    padding: 1rem 0.4rem;\r\n    font-weight: bolder;\r\n    font-size: 20px;\r\n`\r\nexport const TaskPriority = Styled(Priority) `\r\n    color: #fff;\r\n    padding: 1rem 0.4rem;\r\n    font-weight: bolder;\r\n    font-size: 20px;\r\n`\r\nexport const TaskTimes = Styled(Times) `\r\n    color: #fff;\r\n    padding: 1rem 0.4rem;\r\n    font-weight: bolder;\r\n    font-size: 20px;\r\n`","import React from 'react'\r\nimport {ToDoTask, ToDoNoTask, ToDoTaskTHeader, Task, Priority, Times, ForFlex, TaskTitle, TaskPriority, TaskTimes} from './ToDoListTasksStyled'\r\n\r\nconst ToDoListTasks = (props) => {\r\n\r\n    const {tasks} = props\r\n    const length = tasks.length\r\n    const showTasks = length ? tasks.map((task, index) => {\r\n        return (\r\n            <ForFlex key={index}>\r\n                <Task>{task.task}</Task>\r\n                <Priority>{task.priority}</Priority>\r\n                <Times onClick = {() => props.handelDelete(index)}>&times;</Times>\r\n            </ForFlex>\r\n        )\r\n    }) : (\r\n        <ToDoNoTask>\r\n            <p>There Is No Task Right Now.</p>\r\n        </ToDoNoTask>\r\n    )\r\n\r\n    return (\r\n        <ToDoTask>\r\n        <ToDoTaskTHeader>\r\n            <TaskTitle>Task Name</TaskTitle>\r\n            <TaskPriority>Priority Type</TaskPriority>\r\n            <TaskTimes>Action</TaskTimes>\r\n        </ToDoTaskTHeader>\r\n            {showTasks}\r\n        </ToDoTask>\r\n    )\r\n}\r\n\r\nexport default ToDoListTasks","import Styled from 'styled-components'\r\n\r\nexport const ToDoAddForm = Styled.form `\r\n    display: flex;\r\n    @media (max-width: 992px) {\r\n        display: block;\r\n    };\r\n`\r\n\r\nexport const ToDoAddFormInput = Styled.input `\r\n    border: none;\r\n    padding: 1rem;\r\n    outline: none;\r\n    color: #30B9F0;\r\n    font-weight: bold;\r\n    flex-basis: 10%;\r\n`\r\n\r\nexport const ToDoAddFormNameLabel = Styled.label `\r\n    flex-basis: 60%;\r\n`\r\n\r\nexport const ToDoAddFormNameInput = Styled(ToDoAddFormInput)\r\n`\r\n    width: 100%;\r\n    background-color: #eee;\r\n`\r\n\r\nexport const ToDoAddFormPriorityLabel = Styled.label `\r\n    flex-basis: 30%;\r\n`\r\n\r\nexport const ToDoAddFormPriorityInput = Styled(ToDoAddFormInput)\r\n`\r\n    width: 100%;\r\n    background-color: #eee;\r\n`\r\n\r\n\r\nexport const ToDoAddFormSubmit = Styled.input `\r\n    cursor: pointer;\r\n    color: #fff;\r\n    background-color: #30B9F0;\r\n    border: none;\r\n    outline: none;\r\n    font-weight: 700;\r\n    @media (max-width: 992px) {\r\n        width: 100%;\r\n        padding: 5%;\r\n    };\r\n`","import React, {Component, Fragment} from 'react'\r\nimport { ToDoAddForm, ToDoAddFormNameInput, ToDoAddFormNameLabel, ToDoAddFormPriorityInput, ToDoAddFormPriorityLabel, ToDoAddFormSubmit } from './ToDoListAddStyled'\r\n\r\nclass ToDoListAdd extends Component {\r\n\r\n    state = {\r\n        task: '',\r\n        priority: ''\r\n    }\r\n\r\n    handelChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handelSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.addItem(this.state)\r\n        this.setState({\r\n            task: '',\r\n            priority: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ToDoAddForm onChange={this.handelChange} onSubmit={this.handelSubmit} >\r\n                <ToDoAddFormNameLabel htmlFor=\"task\">\r\n                    <ToDoAddFormNameInput type=\"text\" id=\"task\" placeholder='Type your task name here!' value={this.state.task} required/>\r\n                </ToDoAddFormNameLabel>\r\n                <ToDoAddFormPriorityLabel htmlFor=\"priority\">\r\n                    <ToDoAddFormPriorityInput type=\"text\" id=\"priority\" placeholder='Type your priority here!' value={this.state.priority} required/>\r\n                </ToDoAddFormPriorityLabel>\r\n                <ToDoAddFormSubmit type=\"submit\" value='Add new task'/>\r\n                </ToDoAddForm>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDoListAdd","import React, { Component, Fragment } from 'react'\nimport ToDoListTasks from './Components/ToDoListTasks/ToDoListTasks'\nimport ToDoListAdd from './Components/ToDoListAdd/ToDoListAdd'\n\nclass App extends Component {\n\n    state = {\n        tasks: [\n            {task: 'Create a new site', priority: 'Urgent' },\n            {task: 'Create a new app', priority: 'Delayed' },\n            {task: 'Create a new landing page', priority: 'Not urgent' }\n        ]\n    }\n\n    handelDelete = (indexSelected) => {\n        const allTasks = this.state.tasks\n        const allTasksWithoutDeleted = allTasks.filter((task, index) => {\n            return (\n                index !== indexSelected\n            )\n        })\n        this.setState({\n            tasks: allTasksWithoutDeleted\n        })\n    }\n\n    addItem = item => {\n        const tasks = this.state.tasks\n        tasks.push(item)\n        this.setState({\n            tasks\n        })\n    }\n\n    render() {\n        return ( \n            <Fragment>\n                <h1 className = \"text-center\">To Do List</h1>\n                <div className=\"list-tasks container\">\n                    <section>\n                        <ToDoListTasks tasks = { this.state.tasks } handelDelete = { this.handelDelete } />\n                    </section>\n                    <section>\n                        <ToDoListAdd tasks = { this.state.tasks } addItem = { this.addItem } />\n                    </section>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import ('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}