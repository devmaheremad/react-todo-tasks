{"version":3,"sources":["Components/ToDoListTasks/ToDoListTasks.js","Components/ToDoListAdd/ToDoListAdd.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoListTasks","props","tasks","showTasks","length","map","task","index","className","priority","onClick","handelDelete","ToDoListAdd","state","handelChange","e","setState","target","id","value","handelSubmit","preventDefault","addItem","method","onChange","this","onSubmit","htmlFor","type","placeholder","defaultValue","required","Component","App","indexSelected","allTasksWithoutDeleted","filter","item","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAiCeA,G,MA9BO,SAACC,GAAW,IAEvBC,EAASD,EAATC,MAEDC,EADSD,EAAME,OACMF,EAAMG,KAAI,SAACC,EAAMC,GACxC,OACI,gCACI,sBAAMC,UAAU,OAAhB,SAAwBF,EAAKA,OAC7B,sBAAME,UAAU,WAAhB,SAA4BF,EAAKG,WACjC,sBAAMD,UAAU,QAAQE,QAAW,kBAAMT,EAAMU,aAAaJ,IAA5D,oBAHMA,MAOd,qBAAKC,UAAU,WAAf,SACI,8DAIR,OACI,sBAAKA,UAAU,mBAAf,UACA,sBAAKA,UAAU,WAAf,UACI,sBAAMA,UAAU,aAAhB,uBACA,sBAAMA,UAAU,iBAAhB,2BACA,sBAAMA,UAAU,QAAhB,uBAECL,O,OCcES,G,kNArCXC,MAAQ,CACJP,KAAM,GACNG,SAAU,I,EAGdK,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOC,GAAKH,EAAEE,OAAOE,S,EAIhCC,aAAe,SAACL,GACZA,EAAEM,iBACF,EAAKpB,MAAMqB,QAAQ,EAAKT,OACxB,EAAKG,SAAS,CACVV,KAAM,GACNG,SAAU,M,uDAKd,OACI,qBAAKD,UAAU,iBAAf,SACI,uBAAMe,OAAO,OAAOC,SAAUC,KAAKX,aAAcY,SAAUD,KAAKL,aAAhE,UACA,uBAAOZ,UAAU,OAAOmB,QAAQ,OAAhC,SACI,uBAAOC,KAAK,OAAOV,GAAG,OAAOW,YAAY,4BAA4BC,aAAcL,KAAKZ,MAAMP,KAAMyB,UAAQ,MAEhH,uBAAOvB,UAAU,WAAWmB,QAAQ,WAApC,SACI,uBAAOC,KAAK,OAAOV,GAAG,WAAWW,YAAY,2BAA2BC,aAAcL,KAAKZ,MAAMJ,SAAUsB,UAAQ,MAEvH,uBAAOH,KAAK,SAAST,MAAM,0B,GAhCjBa,cCgDXC,E,4MA7CXpB,MAAQ,CACJX,MAAO,CACH,CAACI,KAAM,oBAAqBG,SAAU,UACtC,CAACH,KAAM,mBAAoBG,SAAU,WACrC,CAACH,KAAM,4BAA6BG,SAAU,gB,EAItDE,aAAe,SAACuB,GACZ,IACMC,EADW,EAAKtB,MAAMX,MACYkC,QAAO,SAAC9B,EAAMC,GAClD,OACIA,IAAU2B,KAGlB,EAAKlB,SAAS,CACVd,MAAOiC,K,EAIfb,QAAU,SAAAe,GACN,IAAMnC,EAAQ,EAAKW,MAAMX,MACzBA,EAAMoC,KAAKD,GACX,EAAKrB,SAAS,CACVd,W,uDAKJ,OACI,eAAC,WAAD,WACI,oBAAIM,UAAY,cAAhB,wBACA,sBAAKA,UAAU,uBAAf,UACI,kCACI,cAAC,EAAD,CAAeN,MAAUuB,KAAKZ,MAAMX,MAAQS,aAAiBc,KAAKd,iBAEtE,kCACI,cAAC,EAAD,CAAaT,MAAUuB,KAAKZ,MAAMX,MAAQoB,QAAYG,KAAKH,sB,GAvCjEU,aCQHO,EAZS,SAAAC,GAChBA,GAAeA,aAAuBC,UACtC,6BAAsBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDpBQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.24817d23.chunk.js","sourcesContent":["import React from 'react'\r\nimport './ToDoListTasks.css'\r\n\r\nconst ToDoListTasks = (props) => {\r\n\r\n    const {tasks} = props\r\n    const length = tasks.length\r\n    const showTasks = length ? tasks.map((task, index) => {\r\n        return (\r\n            <div key={index}>\r\n                <span className=\"task\">{task.task}</span>\r\n                <span className=\"priority\">{task.priority}</span>\r\n                <span className=\"times\" onClick = {() => props.handelDelete(index)}>&times;</span>\r\n            </div>\r\n        )\r\n    }) : (\r\n        <div className='no-tasks'>\r\n            <p>There Is No Task Right Now.</p>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className='to-do-list-tasks'>\r\n        <div className=\"t-header\">\r\n            <span className=\"task title\">Task Name</span>\r\n            <span className=\"priority title\">Priority Type</span>\r\n            <span className=\"title\">Action</span>\r\n        </div>\r\n            {showTasks}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoListTasks","import React, {Component} from 'react'\r\nimport './ToDoListAdd.css'\r\n\r\nclass ToDoListAdd extends Component {\r\n\r\n    state = {\r\n        task: '',\r\n        priority: ''\r\n    }\r\n\r\n    handelChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handelSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.addItem(this.state)\r\n        this.setState({\r\n            task: '',\r\n            priority: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='to-do-list-add'>\r\n                <form method=\"post\" onChange={this.handelChange} onSubmit={this.handelSubmit} >\r\n                <label className=\"task\" htmlFor=\"task\">\r\n                    <input type=\"text\" id=\"task\" placeholder='Type your task name here!' defaultValue={this.state.task} required/>\r\n                </label>\r\n                <label className=\"priority\" htmlFor=\"priority\">\r\n                    <input type=\"text\" id=\"priority\" placeholder='Type your priority here!' defaultValue={this.state.priority} required/>\r\n                </label>\r\n                <input type=\"submit\" value='Add new task'/>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDoListAdd","import React, { Component, Fragment } from 'react'\nimport ToDoListTasks from './Components/ToDoListTasks/ToDoListTasks'\nimport ToDoListAdd from './Components/ToDoListAdd/ToDoListAdd'\n\nclass App extends Component {\n\n    state = {\n        tasks: [\n            {task: 'Create a new site', priority: 'Urgent' },\n            {task: 'Create a new app', priority: 'Delayed' },\n            {task: 'Create a new landing page', priority: 'Not urgent' }\n        ]\n    }\n\n    handelDelete = (indexSelected) => {\n        const allTasks = this.state.tasks\n        const allTasksWithoutDeleted = allTasks.filter((task, index) => {\n            return (\n                index !== indexSelected\n            )\n        })\n        this.setState({\n            tasks: allTasksWithoutDeleted\n        })\n    }\n\n    addItem = item => {\n        const tasks = this.state.tasks\n        tasks.push(item)\n        this.setState({\n            tasks\n        })\n    }\n\n    render() {\n        return ( \n            <Fragment>\n                <h1 className = \"text-center\">To Do List</h1>\n                <div className=\"list-tasks container\">\n                    <section>\n                        <ToDoListTasks tasks = { this.state.tasks } handelDelete = { this.handelDelete } />\n                    </section>\n                    <section>\n                        <ToDoListAdd tasks = { this.state.tasks } addItem = { this.addItem } />\n                    </section>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import ('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}