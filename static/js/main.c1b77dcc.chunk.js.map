{"version":3,"sources":["Components/ToDoListTasks/ToDoListTasks.js","Components/ToDoListAdd/ToDoListAdd.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoListTasks","props","tasks","showTasks","length","map","task","className","priority","onClick","handelDelete","id","ToDoListAdd","state","Math","random","handelChange","e","setState","target","value","handelSubmit","preventDefault","addItem","method","onChange","this","onSubmit","htmlFor","type","placeholder","required","Component","App","allTasksWithoutDeleted","filter","item","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAiCeA,G,MA9BO,SAACC,GAAW,IAEvBC,EAASD,EAATC,MAEDC,EADSD,EAAME,OACMF,EAAMG,KAAI,SAAAC,GACjC,OACI,gCACI,sBAAMC,UAAU,OAAhB,SAAwBD,EAAKA,OAC7B,sBAAMC,UAAU,WAAhB,SAA4BD,EAAKE,WACjC,sBAAMD,UAAU,QAAQE,QAAW,kBAAMR,EAAMS,aAAaJ,EAAKK,KAAjE,oBAHML,EAAKK,OAOnB,qBAAKJ,UAAU,WAAf,SACI,8DAIR,OACI,sBAAKA,UAAU,mBAAf,UACA,sBAAKA,UAAU,WAAf,UACI,sBAAMA,UAAU,aAAhB,uBACA,sBAAMA,UAAU,iBAAhB,2BACA,sBAAMA,UAAU,QAAhB,uBAECJ,O,OCgBES,G,kNAvCXC,MAAQ,CACJF,GAAIG,KAAKC,SACTT,KAAM,GACNE,SAAU,I,EAGdQ,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOR,GAAKM,EAAEE,OAAOC,S,EAIhCC,aAAe,SAACJ,GACZA,EAAEK,iBACF,EAAKrB,MAAMsB,QAAQ,EAAKV,OACxB,EAAKK,SAAS,CACVP,GAAIG,KAAKC,SACTT,KAAM,GACNE,SAAU,M,uDAKd,OACI,qBAAKD,UAAU,iBAAf,SACI,uBAAMiB,OAAO,OAAOC,SAAUC,KAAKV,aAAcW,SAAUD,KAAKL,aAAhE,UACA,uBAAOd,UAAU,OAAOqB,QAAQ,OAAhC,SACI,uBAAOC,KAAK,OAAOlB,GAAG,OAAOmB,YAAY,4BAA4BV,MAAOM,KAAKb,MAAMP,KAAMyB,UAAQ,MAEzG,uBAAOxB,UAAU,WAAWqB,QAAQ,WAApC,SACI,uBAAOC,KAAK,OAAOlB,GAAG,WAAWmB,YAAY,2BAA2BV,MAAOM,KAAKb,MAAML,SAAUuB,UAAQ,MAEhH,uBAAOF,KAAK,SAAST,MAAM,0B,GAlCjBY,cCgDXC,E,4MA7CXpB,MAAQ,CACJX,MAAO,CACH,CAAES,GAAI,EAAGL,KAAM,oBAAqBE,SAAU,UAC9C,CAAEG,GAAI,EAAGL,KAAM,mBAAoBE,SAAU,WAC7C,CAAEG,GAAI,EAAGL,KAAM,4BAA6BE,SAAU,gB,EAI9DE,aAAe,SAACC,GACZ,IACMuB,EADW,EAAKrB,MAAMX,MACYiC,QAAO,SAAA7B,GAC3C,OACIA,EAAKK,KAAOA,KAGpB,EAAKO,SAAS,CACVhB,MAAOgC,K,EAIfX,QAAU,SAAAa,GACN,IAAMlC,EAAQ,EAAKW,MAAMX,MACzBA,EAAMmC,KAAKD,GACX,EAAKlB,SAAS,CACVhB,MAAOA,K,uDAKX,OACI,eAAC,WAAD,WACI,oBAAIK,UAAY,cAAhB,wBACA,sBAAKA,UAAU,uBAAf,UACI,kCACI,cAAC,EAAD,CAAeL,MAAUwB,KAAKb,MAAMX,MAAQQ,aAAiBgB,KAAKhB,iBAEtE,kCACI,cAAC,EAAD,CAAaR,MAAUwB,KAAKb,MAAMX,MAAQqB,QAAYG,KAAKH,sB,GAvCjES,aCQHM,EAZS,SAAAC,GAChBA,GAAeA,aAAuBC,UACtC,6BAAsBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDpBQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c1b77dcc.chunk.js","sourcesContent":["import React from 'react'\r\nimport './ToDoListTasks.css'\r\n\r\nconst ToDoListTasks = (props) => {\r\n\r\n    const {tasks} = props\r\n    const length = tasks.length\r\n    const showTasks = length ? tasks.map(task => {\r\n        return (\r\n            <div key={task.id}>\r\n                <span className=\"task\">{task.task}</span>\r\n                <span className=\"priority\">{task.priority}</span>\r\n                <span className=\"times\" onClick = {() => props.handelDelete(task.id)}>&times;</span>\r\n            </div>\r\n        )\r\n    }) : (\r\n        <div className='no-tasks'>\r\n            <p>There Is No Task Right Now.</p>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className='to-do-list-tasks'>\r\n        <div className=\"t-header\">\r\n            <span className=\"task title\">Task Name</span>\r\n            <span className=\"priority title\">Priority Type</span>\r\n            <span className=\"title\">Action</span>\r\n        </div>\r\n            {showTasks}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoListTasks","import React, {Component} from 'react'\r\nimport './ToDoListAdd.css'\r\n\r\nclass ToDoListAdd extends Component {\r\n\r\n    state = {\r\n        id: Math.random(),\r\n        task: '',\r\n        priority: ''\r\n    }\r\n\r\n    handelChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handelSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.addItem(this.state)\r\n        this.setState({\r\n            id: Math.random(),\r\n            task: '',\r\n            priority: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='to-do-list-add'>\r\n                <form method=\"post\" onChange={this.handelChange} onSubmit={this.handelSubmit} >\r\n                <label className=\"task\" htmlFor=\"task\">\r\n                    <input type=\"text\" id=\"task\" placeholder='Type your task name here!' value={this.state.task} required/>\r\n                </label>\r\n                <label className=\"priority\" htmlFor=\"priority\">\r\n                    <input type=\"text\" id=\"priority\" placeholder='Type your priority here!' value={this.state.priority} required/>\r\n                </label>\r\n                <input type=\"submit\" value='Add new task'/>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDoListAdd","import React, { Component, Fragment } from 'react'\nimport ToDoListTasks from './Components/ToDoListTasks/ToDoListTasks'\nimport ToDoListAdd from './Components/ToDoListAdd/ToDoListAdd'\n\nclass App extends Component {\n\n    state = {\n        tasks: [\n            { id: 0, task: 'Create a new site', priority: 'Urgent' },\n            { id: 1, task: 'Create a new app', priority: 'Delayed' },\n            { id: 2, task: 'Create a new landing page', priority: 'Not urgent' }\n        ]\n    }\n\n    handelDelete = (id) => {\n        const allTasks = this.state.tasks\n        const allTasksWithoutDeleted = allTasks.filter(task => {\n            return (\n                task.id !== id\n            )\n        })\n        this.setState({\n            tasks: allTasksWithoutDeleted\n        })\n    }\n\n    addItem = item => {\n        const tasks = this.state.tasks\n        tasks.push(item)\n        this.setState({\n            tasks: tasks\n        })\n    }\n\n    render() {\n        return ( \n            <Fragment>\n                <h1 className = \"text-center\">To Do List</h1>\n                <div className=\"list-tasks container\">\n                    <section>\n                        <ToDoListTasks tasks = { this.state.tasks } handelDelete = { this.handelDelete } />\n                    </section>\n                    <section>\n                        <ToDoListAdd tasks = { this.state.tasks } addItem = { this.addItem } />\n                    </section>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import ('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}